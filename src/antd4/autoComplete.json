{
  "name": "AutoComplete",
  "props": {
    "allowClear": {
      "value": "",
      "description": "Clearing is supported",
      "default": "false",
      "type": "boolean",
      "description_zh": "支持清除"
    },
    "autoFocus": {
      "value": "",
      "description": "Automatically get focus",
      "default": "false",
      "type": "boolean",
      "description_zh": "自动获取焦点"
    },
    "backfill": {
      "value": "",
      "description": "When using the keyboard to select options, backfill the selected items into the input box",
      "default": "false",
      "type": "boolean",
      "description_zh": "使用键盘选择选项的时候把选中项回填到输入框中"
    },
    "bordered": {
      "value": "",
      "description": "Whether there is a border or not",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否有边框"
    },
    ":children": {
      "value": [
        "<Input />"
      ],
      "description": "Custom input box | Autocomplete data sources",
      "default": "<Input | >",
      "type": "React.ReactElement<OptionProps> | Array<React.ReactElement<OptionProps>>",
      "description_zh": "自定义输入框 | 自动完成的数据源"
    },
    "defaultActiveFirstOption": {
      "value": "",
      "description": "Whether to highlight the first option by default",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否默认高亮第一个选项"
    },
    "defaultOpen": {
      "value": "",
      "description": "Whether to expand the drop-down menu by default",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否默认展开下拉菜单"
    },
    "defaultValue": {
      "value": "",
      "description": "Specifies the items that are selected by default",
      "default": "-",
      "type": "string",
      "description_zh": "指定默认选中的条目"
    },
    "disabled": {
      "value": "",
      "description": "Whether to disable or not",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否禁用"
    },
    "popupClassName": {
      "value": "",
      "description": "drop-down menu",
      "default": "-",
      "type": "string",
      "description_zh": "下拉菜单的 className 属性"
    },
    "dropdownMatchSelectWidth": {
      "value": "",
      "description": "The drop-down menu is the same width as the selector. 'min-width' is set by default and is ignored when the value is less than the width of the selection box. false, which turns off virtual scrolling",
      "default": "true",
      "type": "boolean | number",
      "description_zh": "下拉菜单和选择器同宽。默认将设置 `min-width`，当值小于选择框宽度时会被忽略。false 时会关闭虚拟滚动"
    },
    "filterOption": {
      "value": "",
      "description": "Whether to filter based on inputs. When it is a function, it will receive two parameters, 'inputValue' and 'option', and when 'option' meets the filter conditions, it should return true, otherwise it should return false",
      "default": "true",
      "type": "boolean | function(inputValue, option)",
      "description_zh": "是否根据输入项进行筛选。当其为一个函数时，会接收 `inputValue` `option` 两个参数，当 `option` 符合筛选条件时，应返回 true，反之则返回 false"
    },
    ":getPopupContainer": {
      "value": "",
      "description": "The menu renders the parent node. By default, it is rendered to the body, and if you're having trouble scrolling the menu, try modifying the scrolling area and positioning it relative to it. [Example] (https://codesandbox.io/s/4j168r7jw0)",
      "default": "() => document.body",
      "type": "function(triggerNode)",
      "description_zh": "菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。[示例](https://codesandbox.io/s/4j168r7jw0)"
    },
    ":notFoundContent": {
      "value": "",
      "description": "What is displayed when the drop-down list is empty",
      "default": "-",
      "type": "ReactNode",
      "description_zh": "当下拉列表为空时显示的内容"
    },
    "open": {
      "value": "",
      "description": "Whether to expand the drop-down menu",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否展开下拉菜单"
    },
    ":options": {
      "value": "",
      "description": "Data-based configuration options will get better rendering performance than JSX definitions",
      "default": "-",
      "type": "{ label, value }\\[]",
      "description_zh": "数据化配置选项内容，相比 jsx 定义会获得更好的渲染性能"
    },
    "placeholder": {
      "value": "",
      "description": "Input box prompt",
      "default": "-",
      "type": "string",
      "required": true,
      "description_zh": "输入框提示"
    },
    "status": {
      "value": [
        "error",
        "warning"
      ],
      "description": "Set the verification status",
      "default": "-",
      "type": "error / warning",
      "description_zh": "设置校验状态"
    },
    "value": {
      "value": "",
      "description": "Specifies the currently selected entry",
      "default": "-",
      "type": "string",
      "description_zh": "指定当前选中的条目"
    }
  },
  "methods": [
    {
      "name": "blur",
      "description": "Remove the focus",
      "params": "",
      "description_zh": "移除焦点"
    },
    {
      "name": "focus",
      "description": "Get focus",
      "params": "",
      "description_zh": "获取焦点"
    }
  ],
  "events": [
    {
      "name": "onBlur",
      "description": "Callbacks when you lose focus",
      "params": "function()",
      "description_zh": "失去焦点时的回调"
    },
    {
      "name": "onChange",
      "description": "This function is called when option is selected, or when the value of input changes",
      "params": "function(value)",
      "description_zh": "选中 option，或 input 的 value 变化时，调用此函数"
    },
    {
      "name": "onDropdownVisibleChange",
      "description": "Expand the callback for the drop-down menu",
      "params": "function(open)",
      "description_zh": "展开下拉菜单的回调"
    },
    {
      "name": "onFocus",
      "description": "Callbacks when gaining focus",
      "params": "function()",
      "description_zh": "获得焦点时的回调"
    },
    {
      "name": "onSearch",
      "description": "It is called when searching for a completion item",
      "params": "function(value)",
      "description_zh": "搜索补全项的时候调用"
    },
    {
      "name": "onSelect",
      "description": "Called when selected, the parameter is the value value of the selected item",
      "params": "function(value, option)",
      "description_zh": "被选中时调用，参数为选中项的 value 值"
    },
    {
      "name": "onClear",
      "description": "Callbacks when content is cleared",
      "params": "function",
      "description_zh": "清除内容时的回调"
    }
  ],
  "link": "https://ant.design/components//auto-complete",
  "link_zh": "https://ant.design/components//auto-complete"
}
