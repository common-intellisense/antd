{
  "name": "Form.Item",
  "props": {
    "colon": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "配合 label 属性使用，表示是否显示 label 后面的冒号",
      "description_zh": "配合 label 属性使用，表示是否显示 label 后面的冒号"
    },
    "dependencies": {
      "default": "-",
      "value": "",
      "type": "NamePath[]",
      "description": "设置依赖字段，说明见下",
      "description_zh": "设置依赖字段，说明见下"
    },
    "extra": {
      "default": "-",
      "value": "",
      "type": "ReactNode",
      "description": "额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。",
      "description_zh": "额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。"
    },
    "getValueFromEvent": {
      "default": "-",
      "value": "",
      "type": "(..args: any[]) => any",
      "description": "设置如何将 event 的值转换成字段值",
      "description_zh": "设置如何将 event 的值转换成字段值"
    },
    "getValueProps": {
      "default": "-",
      "value": "",
      "type": "(value: any) => Record<string, any>",
      "description": "为子元素添加额外的属性 (不建议通过 getValueProps 生成动态函数 prop，请直接将其传递给子组件)",
      "description_zh": "为子元素添加额外的属性 (不建议通过 getValueProps 生成动态函数 prop，请直接将其传递给子组件)"
    },
    "hasFeedback": {
      "default": "false",
      "value": "",
      "type": "boolean | { icons: FeedbackIcons }",
      "description": "配合 validateStatus 属性使用，展示校验状态图标，建议只配合 Input 组件使用 此外，它还可以通过 Icons 属性获取反馈图标。",
      "description_zh": "配合 validateStatus 属性使用，展示校验状态图标，建议只配合 Input 组件使用 此外，它还可以通过 Icons 属性获取反馈图标。"
    },
    "help": {
      "default": "-",
      "value": "",
      "type": "ReactNode",
      "description": "提示信息，如不设置，则会根据校验规则自动生成",
      "description_zh": "提示信息，如不设置，则会根据校验规则自动生成"
    },
    "hidden": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "是否隐藏字段（依然会收集和校验字段）",
      "description_zh": "是否隐藏字段（依然会收集和校验字段）"
    },
    "htmlFor": {
      "default": "-",
      "value": "",
      "type": "string",
      "description": "设置子元素 label htmlFor 属性",
      "description_zh": "设置子元素 label htmlFor 属性"
    },
    "initialValue": {
      "default": "-",
      "value": "",
      "type": "string",
      "description": "设置子元素默认值，如果与 Form 的 initialValues 冲突则以 Form 为准",
      "description_zh": "设置子元素默认值，如果与 Form 的 initialValues 冲突则以 Form 为准"
    },
    "label": {
      "default": "-",
      "value": "",
      "type": "ReactNode",
      "description": "label 标签的文本",
      "description_zh": "label 标签的文本",
      "required": true
    },
    "labelAlign": {
      "default": "right",
      "value": "",
      "type": "left / right",
      "description": "标签文本对齐方式",
      "description_zh": "标签文本对齐方式"
    },
    ":labelCol": {
      "default": "-",
      "value": "",
      "type": "object",
      "description": "label 标签布局，同 <Col> 组件，设置 span offset 值，如 {span: 3, offset: 12} 或 sm: {span: 3, offset: 12}。你可以通过 Form 的 labelCol 进行统一设置，不会作用于嵌套 Item。当和 Form 同时设置时，以 Item 为准",
      "description_zh": "label 标签布局，同 <Col> 组件，设置 span offset 值，如 {span: 3, offset: 12} 或 sm: {span: 3, offset: 12}。你可以通过 Form 的 labelCol 进行统一设置，不会作用于嵌套 Item。当和 Form 同时设置时，以 Item 为准"
    },
    "messageVariables": {
      "default": "-",
      "value": "",
      "type": "Record<string, string>",
      "description": "默认验证字段的信息",
      "description_zh": "默认验证字段的信息"
    },
    "name": {
      "default": "-",
      "value": "",
      "type": "NamePath",
      "description": "字段名，支持数组",
      "description_zh": "字段名，支持数组",
      "required": true
    },
    "normalize": {
      "default": "-",
      "value": "",
      "type": "(value, prevValue, prevValues) => any",
      "description": "组件获取值后进行转换，再放入 Form 中。不支持异步",
      "description_zh": "组件获取值后进行转换，再放入 Form 中。不支持异步"
    },
    "noStyle": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "为 true 时不带样式，作为纯字段控件使用。当自身没有 validateStatus 而父元素存在有 validateStatus 的 Form.Item 会继承父元素的 validateStatus",
      "description_zh": "为 true 时不带样式，作为纯字段控件使用。当自身没有 validateStatus 而父元素存在有 validateStatus 的 Form.Item 会继承父元素的 validateStatus"
    },
    "preserve": {
      "default": "true",
      "value": "",
      "type": "boolean",
      "description": "当字段被删除时保留字段值",
      "description_zh": "当字段被删除时保留字段值"
    },
    "required": {
      "default": "false",
      "value": "",
      "type": "boolean",
      "description": "必填样式设置。如不设置，则会根据校验规则自动生成",
      "description_zh": "必填样式设置。如不设置，则会根据校验规则自动生成"
    },
    "rules": {
      "default": "-",
      "value": "",
      "type": "Rule[]",
      "description": "校验规则，设置字段的校验逻辑。点击此处查看示例",
      "description_zh": "校验规则，设置字段的校验逻辑。点击此处查看示例"
    },
    "shouldUpdate": {
      "default": "false",
      "value": "",
      "type": "boolean | (prevValue, curValue) => boolean",
      "description": "自定义字段更新逻辑，说明见下",
      "description_zh": "自定义字段更新逻辑，说明见下"
    },
    "tooltip": {
      "default": "-",
      "value": "",
      "type": "ReactNode | TooltipProps & { icon: ReactNode }",
      "description": "配置提示信息",
      "description_zh": "配置提示信息"
    },
    "trigger": {
      "default": "onChange",
      "value": "",
      "type": "string",
      "description": "设置收集字段值变更的时机。点击此处查看示例",
      "description_zh": "设置收集字段值变更的时机。点击此处查看示例"
    },
    "validateFirst": {
      "default": "false",
      "value": "",
      "type": "boolean | parallel",
      "description": "当某一规则校验不通过时，是否停止剩下的规则的校验。设置 parallel 时会并行校验",
      "description_zh": "当某一规则校验不通过时，是否停止剩下的规则的校验。设置 parallel 时会并行校验"
    },
    ":validateDebounce": {
      "default": "-",
      "value": "",
      "type": "number",
      "description": "设置防抖，延迟毫秒数后进行校验",
      "description_zh": "设置防抖，延迟毫秒数后进行校验"
    },
    "validateStatus": {
      "default": "-",
      "value": "",
      "type": "string",
      "description": "校验状态，如不设置，则会根据校验规则自动生成，可选：'success' 'warning' 'error' 'validating'",
      "description_zh": "校验状态，如不设置，则会根据校验规则自动生成，可选：'success' 'warning' 'error' 'validating'"
    },
    "validateTrigger": {
      "default": "onChange",
      "value": "",
      "type": "string | string[]",
      "description": "设置字段校验的时机",
      "description_zh": "设置字段校验的时机"
    },
    "valuePropName": {
      "default": "value",
      "value": "",
      "type": "string",
      "description": "子节点的值的属性，如 Switch、Checkbox 的是 checked。该属性为 getValueProps 的封装，自定义 getValueProps 后会失效",
      "description_zh": "子节点的值的属性，如 Switch、Checkbox 的是 checked。该属性为 getValueProps 的封装，自定义 getValueProps 后会失效"
    },
    ":wrapperCol": {
      "default": "-",
      "value": "",
      "type": "object",
      "description": "需要为输入控件设置布局样式时，使用该属性，用法同 labelCol。你可以通过 Form 的 wrapperCol 进行统一设置，不会作用于嵌套 Item。当和 Form 同时设置时，以 Item 为准",
      "description_zh": "需要为输入控件设置布局样式时，使用该属性，用法同 labelCol。你可以通过 Form 的 wrapperCol 进行统一设置，不会作用于嵌套 Item。当和 Form 同时设置时，以 Item 为准"
    }
  },
  "methods": [],
  "link": "https://ant.design/components/form-cn#formitem",
  "link_zh": "https://ant.design/components/form-cn#formitem",
  "events": [],
  "typeDetail": {}
}
