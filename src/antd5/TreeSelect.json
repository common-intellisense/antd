{
  "name": "TreeSelect",
  "props": {
    "rootClassName": {
      "default": "-",
      "value": "",
      "type": "string",
      "description": "Add a className to the outermost component",
      "description_zh": "添加在组件最外层的 className"
    },
    ":allowClear": {
      "default": false,
      "value": "",
      "type": "boolean / { clearIcon?: ReactNode }",
      "description": "Custom clear button (5.8.0: support object)",
      "description_zh": "自定义清除按钮（5.8.0: 支持对象形式）"
    },
    "autoClearSearchValue": {
      "default": true,
      "value": "",
      "type": "boolean",
      "description": "If auto clear search input value when multiple select is selected/deselected",
      "description_zh": "当多选模式下值被选择，自动清空搜索框"
    },
    ":defaultValue": {
      "default": "-",
      "value": "",
      "type": "string / string[]",
      "description": "To set the initial selected item",
      "description_zh": "指定默认选中的条目"
    },
    "disabled": {
      "default": false,
      "value": "",
      "type": "boolean",
      "description": "Whether disabled select",
      "description_zh": "是否禁用"
    },
    "popupClassName": {
      "default": "-",
      "value": "",
      "type": "string",
      "description": "The className of dropdown menu",
      "description_zh": "下拉菜单的 className 属性",
      "version": "4.23.0"
    },
    ":popupMatchSelectWidth": {
      "default": true,
      "value": "",
      "type": "boolean / number",
      "description": "Determine whether the dropdown menu and the select input are the same width. Default set `min-width` same as input. Will ignore when value less than select width. `false` will disable virtual scroll",
      "description_zh": "下拉菜单和选择器同宽。默认将设置 `min-width`，当值小于选择框宽度时会被忽略。false 时会关闭虚拟滚动",
      "version": "5.5.0"
    },
    ":dropdownRender": {
      "default": "-",
      "value": "",
      "type": "(originNode: ReactNode, props) => ReactNode",
      "description": "Customize dropdown content",
      "description_zh": "自定义下拉框内容"
    },
    ":dropdownStyle": {
      "default": "-",
      "value": "",
      "type": "object",
      "description": "To set the style of the dropdown menu",
      "description_zh": "下拉菜单的样式"
    },
    ":fieldNames": {
      "default": "{ label: `label`, value: `value`, children: `children` }",
      "value": "",
      "type": "object",
      "description": "Customize node label, value, children field name",
      "description_zh": "自定义节点 label、value、children 的字段",
      "version": "4.17.0"
    },
    ":filterTreeNode": {
      "default": "function",
      "value": "",
      "type": "boolean / function(inputValue: string, treeNode: TreeNode) (函数需要返回 bool 值)",
      "description": "Whether to filter treeNodes by input value. The value of treeNodeFilterProp is used for filtering by default",
      "description_zh": "是否根据输入项进行筛选，默认用 treeNodeFilterProp 的值作为要筛选的 TreeNode 的属性值"
    },
    ":getPopupContainer": {
      "default": "() => document.body",
      "value": "",
      "type": "function(triggerNode)",
      "description": "To set the container of the dropdown menu. The default is to create a div element in body, you can reset it to the scrolling area and make a relative position",
      "description_zh": "菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。"
    },
    "labelInValue": {
      "default": false,
      "value": "",
      "type": "boolean",
      "description": "Whether to embed label in value, turn the format of value from `string` to {value: string, label: ReactNode, halfChecked(treeCheckStrictly only): string[]}",
      "description_zh": "是否把每个选项的 label 包装到 value 中，会把 value 类型从 `string` 变为 {value: string, label: ReactNode, halfChecked(treeCheckStrictly 时有效): string[] } 的格式"
    },
    ":listHeight": {
      "default": 256,
      "value": "",
      "type": "number",
      "description": "Config popup height",
      "description_zh": "设置弹窗滚动高度"
    },
    ":loadData": {
      "default": "-",
      "value": "",
      "type": "function(node)",
      "description": "Load data asynchronously. Won't be called when filtering to avoid network request",
      "description_zh": "异步加载数据。在过滤时不会调用以防止网络堵塞，可参考 FAQ 获得更多内容"
    },
    ":maxCount": {
      "default": "-",
      "value": "",
      "type": "number",
      "description": "Specifies the maximum number of items that can be selected, only works when `multiple=true`. If this is applied, (`showCheckedStrategy = 'SHOW_ALL'` and no `treeCheckStrictly` is active), or when using `showCheckedStrategy = 'SHOW_PARENT'`, maxCount will be invalid",
      "description_zh": "指定可选中的最多 items 数量，仅在 `multiple=true` 时生效。如果此时 (`showCheckedStrategy = 'SHOW_ALL'` 且未开启 `treeCheckStrictly`)，或使用 `showCheckedStrategy = 'SHOW_PARENT'`，则maxCount无效。",
      "version": "5.23.0"
    },
    ":maxTagCount": {
      "default": "-",
      "value": "",
      "type": "number / responsive",
      "description": "Max tag count to show. responsive will cost render performance",
      "description_zh": "最多显示多少个 tag，响应式模式会对性能产生损耗",
      "version": "responsive: 4.10"
    },
    ":maxTagPlaceholder": {
      "default": "-",
      "value": "",
      "type": "ReactNode / function(omittedValues)",
      "description": "Placeholder for hidden tags",
      "description_zh": "隐藏 tag 时显示的内容"
    },
    ":maxTagTextLength": {
      "default": "-",
      "value": "",
      "type": "number",
      "description": "Max text length to show",
      "description_zh": "最大显示的 tag 文本长度"
    },
    "multiple": {
      "default": false,
      "value": "",
      "type": "boolean",
      "description": "Support multiple selection (value would be an array, set treeCheckable to true automatically)",
      "description_zh": "支持多选（当设置 treeCheckable 时自动变为 true）"
    },
    ":notFoundContent": {
      "default": "`Not Found`",
      "value": "",
      "type": "ReactNode",
      "description": "Specify content to show when no result matches",
      "description_zh": "当下拉列表为空时显示的内容"
    },
    "placeholder": {
      "default": "请选择",
      "value": "",
      "type": "string",
      "description": "Placeholder of the select input",
      "description_zh": "选择框默认文字",
      "$label": "请选择$label",
      "related": [
        "el-form-item.label"
      ]
    },
    "placement": {
      "default": "bottomLeft",
      "value": "",
      "type": "bottomLeft / bottomRight / topLeft / topRight",
      "description": "The position where the selection box pops up",
      "description_zh": "选择框弹出的位置"
    },
    ":prefix": {
      "default": "-",
      "value": "",
      "type": "ReactNode",
      "description": "Custom prefix",
      "description_zh": "自定义前缀",
      "version": "5.22.0"
    },
    "searchValue": {
      "default": "-",
      "value": "",
      "type": "string",
      "description": "The value of search input, controlled mode",
      "description_zh": "搜索框的值，可以通过 `onSearch` 获取用户输入"
    },
    "showCheckedStrategy": {
      "default": "`TreeSelect.SHOW_CHILD`",
      "value": "",
      "type": "TreeSelect.SHOW_ALL / TreeSelect.SHOW_PARENT / TreeSelect.SHOW_CHILD",
      "description": "The way show selected item in box when `treeCheckable` is true. `TreeSelect.SHOW_ALL`: show all checked treeNodes (include parent treeNode). `TreeSelect.SHOW_PARENT`: show checked treeNodes (just show parent treeNode). Default just show child",
      "description_zh": "配置 `treeCheckable` 时，定义选中项回填的方式。`TreeSelect.SHOW_ALL`: 显示所有选中节点(包括父节点)。`TreeSelect.SHOW_PARENT`: 只显示父节点(当父节点下所有子节点都选中时)。 默认只显示子节点"
    },
    "showSearch": {
      "default": "单选：false | 多选：true",
      "value": "",
      "type": "boolean",
      "description": "Whether to display a search input in the dropdown menu",
      "description_zh": "是否支持搜索框"
    },
    "size": {
      "default": "-",
      "value": "",
      "type": "large / middle / small",
      "description": "To set the size of the select input",
      "description_zh": "选择框大小"
    },
    "status": {
      "default": "-",
      "value": "",
      "type": "error / warning",
      "description": "Set validation status",
      "description_zh": "设置校验状态",
      "version": "4.19.0"
    },
    ":suffixIcon": {
      "default": "`<DownOutlined />`",
      "value": "",
      "type": "ReactNode",
      "description": "The custom suffix icon",
      "description_zh": "自定义的选择框后缀图标"
    },
    ":switcherIcon": {
      "default": "-",
      "value": "",
      "type": "ReactNode / ((props: AntTreeNodeProps) => ReactNode)",
      "description": "Custom switcher icon",
      "description_zh": "自定义树节点的展开/折叠图标",
      "version": "renderProps: 4.20.0"
    },
    ":tagRender": {
      "default": "-",
      "value": "",
      "type": "(props) => ReactNode",
      "description": "Customize tag render when `multiple` is true",
      "description_zh": "自定义 tag 内容，多选时生效"
    },
    "treeCheckable": {
      "default": false,
      "value": "",
      "type": "boolean",
      "description": "Whether to show checkbox on the treeNodes",
      "description_zh": "显示 Checkbox"
    },
    "treeCheckStrictly": {
      "default": false,
      "value": "",
      "type": "boolean",
      "description": "Whether to check nodes precisely (in the `checkable` mode), means parent and child nodes are not associated, and it will make `labelInValue` be true",
      "description_zh": "`checkable` 状态下节点选择完全受控（父子节点选中状态不再关联），会使得 `labelInValue` 强制为 true"
    },
    ":treeData": {
      "default": "[]",
      "value": "",
      "type": "array<{value, title, children, [disabled, disableCheckbox, selectable, checkable]}>",
      "description": "Data of the treeNodes, manual construction work is no longer needed if setting this property",
      "description_zh": "treeNodes 数据，如果设置则不需要手动构造 TreeNode 节点（value 在整个树范围内唯一）",
      "required": true
    },
    ":treeDataSimpleMode": {
      "default": false,
      "value": "",
      "type": "boolean / object<{ id: string, pId: string, rootPId: string }>",
      "description": "Enable simple mode of treeData. Changes the treeData schema to: [{id:1, pId:0, value:'1', title:\"test1\",...},...] where pId is parent node's id",
      "description_zh": "使用简单格式的 treeData，具体设置参考可设置的类型 (此时 treeData 应变为这样的数据结构: [{id:1, pId:0, value:'1', title:\"test1\"},...], `pId` 是父节点的 id)"
    },
    ":treeTitleRender": {
      "default": "-",
      "value": "",
      "type": "(nodeData) => ReactNode",
      "description": "Customize node rendering",
      "description_zh": "自定义渲染节点",
      "version": "5.12.0"
    },
    "treeDefaultExpandAll": {
      "default": false,
      "value": "",
      "type": "boolean",
      "description": "Whether to expand all treeNodes by default",
      "description_zh": "默认展开所有树节点"
    },
    ":treeDefaultExpandedKeys": {
      "default": "-",
      "value": "",
      "type": "string[]",
      "description": "Default expanded treeNodes",
      "description_zh": "默认展开的树节点"
    },
    ":treeExpandAction": {
      "default": false,
      "value": "",
      "type": "string / boolean",
      "description": "Tree title open logic when click, optional: false / `click` / `doubleClick`",
      "description_zh": "点击节点 title 时的展开逻辑，可选：false / `click` / `doubleClick`",
      "version": "4.21.0"
    },
    ":treeExpandedKeys": {
      "default": "-",
      "value": "",
      "type": "string[]",
      "description": "Set expanded keys",
      "description_zh": "设置展开的树节点"
    },
    "treeIcon": {
      "default": false,
      "value": "",
      "type": "boolean",
      "description": "Shows the icon before a TreeNode's title. There is no default style; you must set a custom style for it if set to true",
      "description_zh": "是否展示 TreeNode title 前的图标，没有默认样式，如设置为 true，需要自行定义图标相关样式"
    },
    ":treeLine": {
      "default": false,
      "value": "",
      "type": "boolean / object",
      "description": "Shows a connecting line",
      "description_zh": "是否展示线条样式，请参考 Tree - showLine",
      "version": "4.17.0"
    },
    ":treeLoadedKeys": {
      "default": "[]",
      "value": "",
      "type": "string[]",
      "description": "(Controlled) Set loaded tree nodes, need to work with `loadData`",
      "description_zh": "（受控）已经加载的节点，需要配合 `loadData` 使用"
    },
    "treeNodeFilterProp": {
      "default": "`value`",
      "value": "",
      "type": "string",
      "description": "Will be used for filtering if `filterTreeNode` returns true",
      "description_zh": "输入项过滤对应的 treeNode 属性"
    },
    "treeNodeLabelProp": {
      "default": "`title`",
      "value": "",
      "type": "string",
      "description": "Set label prop of treeNode",
      "description_zh": "作为显示的 prop 设置"
    },
    ":value": {
      "default": "-",
      "value": "",
      "type": "string / string[]",
      "description": "To set the current selected item",
      "description_zh": "指定当前选中的条目"
    },
    "variant": {
      "default": "`outlined`",
      "value": "",
      "type": "outlined / borderless / filled / underlined",
      "description": "Variants of selector",
      "description_zh": "形态变体",
      "version": "5.13.0 | `underlined`: 5.24.0"
    },
    "virtual": {
      "default": true,
      "value": "",
      "type": "boolean",
      "description": "Disable virtual scroll when set to false",
      "description_zh": "设置 false 时关闭虚拟滚动",
      "version": "4.1.0"
    }
  },
  "events": [
    {
      "name": "onChange",
      "description": "Called when select a treeNode or input value change",
      "description_zh": "选中树节点时调用此函数",
      "params": "function(value, label, extra)"
    },
    {
      "name": "onDropdownVisibleChange",
      "description": "Called when dropdown open | close",
      "description_zh": "展开下拉菜单的回调",
      "params": "function(open)"
    },
    {
      "name": "onSearch",
      "description": "Called when input changed",
      "description_zh": "文本框值变化时的回调",
      "params": "function(value: string)"
    },
    {
      "name": "onSelect",
      "description": "Called when a treeNode is selected",
      "description_zh": "被选中时调用",
      "params": "function(value, node, extra)"
    },
    {
      "name": "onTreeExpand",
      "description": "Called when treeNode expanded",
      "description_zh": "展示节点时调用",
      "params": "function(expandedKeys)"
    },
    {
      "name": "onPopupScroll",
      "description": "Called when dropdown scrolls",
      "description_zh": "下拉列表滚动时的回调",
      "params": "(event: UIEvent) => void",
      "version": "5.17.0"
    }
  ],
  "methods": [
    {
      "name": "blur",
      "description": "Remove focus",
      "description_zh": "移除焦点"
    },
    {
      "name": "focus",
      "description": "Get focus",
      "description_zh": "获取焦点"
    }
  ],
  "link": "https://ant.design/components/tree-select",
  "link_zh": "https://ant.design/components/tree-select-cn"
}
